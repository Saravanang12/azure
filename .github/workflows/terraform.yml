name: Terraform Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  TF_VERSION: 1.5.7
  TF_INPUT: false
  TF_LOG: ERROR

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read

    steps:
      # ========== SETUP ==========
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      # ========== AZURE AUTH ==========
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Extract Azure Credentials
        id: extract-creds
        run: |
          echo "TF_VAR_client_id=$(jq -r .clientId <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "TF_VAR_client_secret=$(jq -r .clientSecret <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "TF_VAR_subscription_id=$(jq -r .subscriptionId <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV
          echo "TF_VAR_tenant_id=$(jq -r .tenantId <<< '${{ secrets.AZURE_CREDENTIALS }}')" >> $GITHUB_ENV

      - name: Verify Azure Auth
        run: |
          echo "::group::Azure Auth Verification"
          echo "Client ID: ${TF_VAR_client_id:0:4}****"
          echo "Subscription ID: $TF_VAR_subscription_id"
          az account show --query "{subscriptionName:name, user:user.name}" -o json
          echo "::endgroup::"

      # ========== TERRAFORM ==========
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: |
          terraform plan \
            -input=false \
            -out=tfplan
          terraform show -no-color tfplan | head -n 20

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -input=false -auto-approve tfplan

      # ========== POST-RUN ==========
      - name: Cleanup
        if: always()
        run: rm -f tfplan
